# Robust and flexible inventory
all:
  vars:
    # Set minimum Ansible version
    ansible_min_version: "2.9"

    # Global parameters
    ansible_user: "{{ lookup('env', 'USER') | default('default_user') }}"
    ansible_become: true
    ansible_become_method: sudo
    ansible_python_interpreter: /usr/bin/python3
    ansible_shell_type: bash

    # Fallback for SSH hosts that use a jump server (proxy)
    ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    # Global variables for production environments
    prod_variables:
      ansible_connection: ssh
      ansible_become_user: root
      ansible_ssh_private_key_file: ~/.ssh/id_rsa_prod
      ansible_ssh_extra_args: "-o UserKnownHostsFile=/dev/null"
      backup_enabled: true

    # Global variables for development environments
    dev_variables:
      ansible_connection: ssh
      ansible_become_user: root
      ansible_ssh_private_key_file: ~/.ssh/id_rsa_dev
      ansible_ssh_extra_args: "-o UserKnownHostsFile=/dev/null"
      backup_enabled: false
      debug_mode: true

  children:
    # Local hosts group
    local_hosts:
      hosts:
        localhost:
          ansible_connection: local
          ansible_become: true
          ansible_become_method: sudo

    # Production hosts group
    prod_hosts:
      vars:
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      hosts:
        prod_server_1:
          ansible_host: 192.168.1.10
          ansible_user: produser
          ansible_become: true
          ansible_python_interpreter: /usr/bin/python3

        prod_server_2:
          ansible_host: 192.168.1.11
          ansible_user: produser
          ansible_become: true
          ansible_python_interpreter: /usr/bin/python3

    # Development hosts group
    dev_hosts:
      vars:
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
      hosts:
        dev_server_1:
          ansible_host: 192.168.1.20
          ansible_user: devuser
          ansible_become: true
          ansible_python_interpreter: /usr/bin/python3
          debug_mode: true

        dev_server_2:
          ansible_host: 192.168.1.21
          ansible_user: devuser
          ansible_become: true
          ansible_python_interpreter: /usr/bin/python3
          debug_mode: true

    # Docker hosts group (isolated in containers)
    docker_hosts:
      vars:
        ansible_connection: docker
      hosts:
        docker_container_1:
          ansible_user: root
          ansible_python_interpreter: /usr/bin/python3

        docker_container_2:
          ansible_user: root
          ansible_python_interpreter: /usr/bin/python3

    # AWS hosts group (with region variable)
    aws_hosts:
      vars:
        aws_region: us-east-1
        ansible_connection: ssh
        ansible_ssh_private_key_file: "~/.ssh/id_rsa_aws"
      hosts:
        aws_server_1:
          ansible_host: ec2-34-123-45-67.compute-1.amazonaws.com
          ansible_user: ec2-user
          ansible_become: true

        aws_server_2:
          ansible_host: ec2-54-234-12-98.compute-1.amazonaws.com
          ansible_user: ec2-user
          ansible_become: true

    # Group for different OS like Debian and CentOS
    debian_hosts:
      vars:
        ansible_python_interpreter: /usr/bin/python3
        ansible_become: true
      hosts:
        debian_server:
          ansible_host: 192.168.2.10
          ansible_user: debianuser
