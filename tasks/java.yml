---
- name: Update package repository
  ansible.builtin.apt:
    update_cache: true

- name: Ensure man1 directory exists for Java
  ansible.builtin.file:
    path: /usr/share/man/man1
    state: directory
    mode: "0755"

- name: Ensure required extraction utilities are installed
  ansible.builtin.apt:
    name:
      - tar
      - gzip
      - bzip2
      - xz-utils
      - unzip
      - zstd
    state: present

- name: Install common packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop: "{{ common_packages }}"

- name: Install OpenJDK 11 and 17
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - openjdk-11-jdk
    - openjdk-17-jdk

- name: Check if Oracle JDK is installed
  ansible.builtin.stat:
    path: "{{ oracle_jdk_cache_dir }}/{{ oracle_jdk_tar }}"
  register: oracle_jdk_installed

- name: Download Oracle JDK tarball
  ansible.builtin.get_url:
    url: "{{ oracle_jdk_url }}"
    dest: "/tmp/{{ oracle_jdk_tar }}"
    mode: "0644"
  when: not oracle_jdk_installed.stat.exists

- name: Create Oracle JDK cache directory
  ansible.builtin.file:
    path: "{{ oracle_jdk_cache_dir }}"
    state: directory

- name: Move Oracle JDK tarball to cache
  ansible.builtin.command:
    cmd: "mv /tmp/{{ oracle_jdk_tar }} {{ oracle_jdk_cache_dir }}"
  when: not oracle_jdk_installed.stat.exists

- name: Extract Oracle JDK tarball manually
  ansible.builtin.shell: |
    tar -xvzf {{ oracle_jdk_cache_dir }}/{{ oracle_jdk_tar }} -C /usr/lib/jvm/
  args:
    warn: false
  when: not oracle_jdk_installed.stat.exists

- name: Configurar alternativas para o Java
  ansible.builtin.command: >
    update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-{{ oracle_jdk_version }}/bin/java 1
  when: not oracle_jdk_installed.stat.exists

- name: Install software-properties-common
  ansible.builtin.apt:
    name: software-properties-common
    state: present

- name: Add PPA for Oracle JDK
  ansible.builtin.apt_repository:
    repo: "ppa:linuxuprising/java"
    state: present

- name: Update package repository after adding Oracle JDK PPA
  ansible.builtin.apt:
    update_cache: yes

- name: Pre-accept Oracle license
  ansible.builtin.shell: |
    echo oracle-java{{ oracle_jdk_version }}-installer shared/accepted-oracle-license-v1-3 select true | sudo debconf-set-selections

- name: Install Oracle JDK
  ansible.builtin.apt:
    name: "oracle-java{{ oracle_jdk_version }}-installer"
    state: present

- name: Set default Java version to Oracle JDK
  ansible.builtin.command:
    cmd: "update-alternatives --install /usr/bin/java java /usr/lib/jvm/oracle-jdk-{{ oracle_jdk_version }}/bin/java 1 && update-alternatives --set java /usr/lib/jvm/oracle-jdk-{{ oracle_jdk_version }}/bin/java"

- name: Set default javac version to Oracle JDK
  ansible.builtin.command:
    cmd: "update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/oracle-jdk-{{ oracle_jdk_version }}/bin/javac 1 && update-alternatives --set javac /usr/lib/jvm/oracle-jdk-{{ oracle_jdk_version }}/bin/javac"

- name: Set JAVA_HOME environment variable
  ansible.builtin.lineinfile:
    path: /etc/environment
    line: 'JAVA_HOME="/usr/lib/jvm/oracle-jdk-{{ oracle_jdk_version }}"'
    state: present

- name: Source /etc/environment to apply JAVA_HOME
  ansible.builtin.shell: "source /etc/environment"

- name: Verify Java version
  ansible.builtin.command: "java -version"
  register: java_version

- name: Display Java version installed
  ansible.builtin.debug:
    msg: "Java version installed: {{ java_version.stdout_lines }}"

- name: Verify javac version
  ansible.builtin.command: "javac -version"
  register: javac_version

- name: Display javac version installed
  ansible.builtin.debug:
    msg: "javac version installed: {{ javac_version.stdout_lines }}"
